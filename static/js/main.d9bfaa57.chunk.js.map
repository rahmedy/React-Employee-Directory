{"version":3,"sources":["components/Search/search.js","components/Table/table.js","components/Main/main.js","components/Header/header.js","App.js","index.js"],"names":["Search","props","type","className","value","search","onChange","handleChange","placeholder","Table","resArray","employees","results","map","person","x","key","scope","src","image","alt","name","phone","email","dob","onClick","sortBy","Header","toTop","class","State","state","acsend","event","target","filter","entry","Object","values","some","val","includes","setState","sort","ascend","acsendFalse","a","b","acsendTrue","document","documentElement","scrollTop","axios","get","then","res","data","dateString","date","d","Date","correctDate","getMonth","getDate","getFullYear","picture","large","first","last","age","catch","error","console","log","this","Component","App","ReactDOM","render","getElementById"],"mappings":"0VAeeA,MAZf,SAAgBC,GAEZ,OAEQ,8BACI,2BAAOC,KAAK,OAAOC,UAAU,eAAeC,MAAOH,EAAMI,OAAQC,SAAUL,EAAMM,aAAcC,YAAY,a,MC4B5GC,IC7BXC,ED6BWD,EAjCf,SAAeR,GAEX,IAAMU,EAAYV,EAAMW,QAAQC,KAAI,SAACC,EAAQC,GACzC,OACI,wBAAIC,IAAKD,GACL,wBAAIE,MAAM,OAAM,yBAAKC,IAAKJ,EAAOK,MAAOC,IAAI,YAC5C,4BAAKN,EAAOO,MACZ,4BAAKP,EAAOQ,OACZ,4BAAKR,EAAOS,OACZ,4BAAKT,EAAOU,SAKxB,OACI,2BAAOrB,UAAU,qCACb,+BACI,4BACI,wBAAIc,MAAM,OAAV,WACA,wBAAIA,MAAM,MAAMQ,QAAS,kBAAMxB,EAAMyB,OAAO,UAA5C,eACA,wBAAIT,MAAM,OAAV,SACA,wBAAIA,MAAM,MAAMQ,QAAS,kBAAMxB,EAAMyB,OAAO,WAA5C,wBACA,wBAAIT,MAAM,MAAMQ,QAAS,kBAAMxB,EAAMyB,OAAO,SAA5C,qBAGR,+BAEKf,KEjBFgB,G,MATA,SAAC1B,GACZ,OACI,yBAAKE,UAAU,wCACX,kDACA,4BAAQsB,QAAS,kBAAMxB,EAAM2B,SAAS1B,KAAK,SAAS2B,MAAM,+BAA1D,kB,iBDCSC,E,4MAEjBC,MAAQ,CACJ1B,OAAQ,GACRO,QAAS,GACToB,QAAQ,G,EAiCZzB,aAAe,SAAA0B,GACX,IAAMjB,EAAMiB,EAAMC,OAAO9B,MACnB+B,EAASzB,EAASyB,QAAO,SAAAC,GAAK,OAAIC,OAAOC,OAAOF,GAAOG,MAAK,SAAAC,GAAG,MAAmB,kBAARA,GAAoBA,EAAIC,SAASzB,SAEjH,EAAK0B,SAAS,CACVrC,OAAQW,EACRJ,QAASuB,K,EAIjBT,OAAS,SAAAiB,GACL,IAA0B,IAAtB,EAAKZ,MAAMa,OAAiB,CAC5B,IAAMC,EAAc,EAAKd,MAAMnB,QAAQ+B,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEH,GAAQI,EAAEJ,GAAQ,GAAK,KAE/E,EAAKD,SAAS,CACV9B,QAASiC,EACTD,QAAQ,QAET,CACH,IAAMI,EAAa,EAAKjB,MAAMnB,QAAQ+B,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEH,GAAQI,EAAEJ,GAAQ,GAAK,KAE9E,EAAKD,SAAS,CACV9B,QAASoC,EACTJ,QAAQ,M,EAMpBhB,MAAQ,WACJqB,SAASC,gBAAgBC,UAAY,G,kEA3DpB,IAAD,OAChBC,IAAMC,IAAI,0CACLC,MAAK,SAAAC,GAEF7C,EAAW6C,EAAIC,KAAK5C,QAAQC,KAAI,SAAAC,GAC5B,IAAI2C,EAAa3C,EAAOU,IAAIkC,KACxBC,EAAI,IAAIC,KAAKH,GACbI,EAAeF,EAAEG,WAAa,EAAK,IAAMH,EAAEI,UAAY,IAAMJ,EAAEK,cAEnE,MAAO,CACH7C,MAAOL,EAAOmD,QAAQC,MACtB7C,KAAK,GAAD,OAAKP,EAAOO,KAAK8C,MAAjB,YAA0BrD,EAAOO,KAAK+C,MAC1C9C,MAAOR,EAAOQ,MACdC,MAAOT,EAAOS,MACdC,IAAKqC,EACLQ,IAAKvD,EAAOU,IAAI6C,QAKxB,EAAK3B,SAAS,CAAE9B,QAASF,OAG5B4D,OAAM,SAAUC,GACbC,QAAQC,IAAIF,Q,+BAuCpB,OACI,6BACI,kBAAC,EAAD,CAAQ3C,MAAO8C,KAAK9C,QACpB,kBAAC,EAAD,CAAQvB,OAAQqE,KAAK3C,MAAM1B,OAAQE,aAAcmE,KAAKnE,eACtD,kBAAC,EAAD,CAAOK,QAAS8D,KAAK3C,MAAMnB,QAASc,OAAQgD,KAAKhD,c,GA5E9BiD,aEGpBC,MARf,WACE,OACE,yBAAKzE,UAAY,aACf,kBAAC,EAAD,QCDN0E,IAASC,OACL,kBAAC,EAAD,MAEF7B,SAAS8B,eAAe,W","file":"static/js/main.d9bfaa57.chunk.js","sourcesContent":["import React from 'react';\nimport './search.css';\n\nfunction Search(props) {\n\n    return (\n        // <div className=\"row\">\n            <form>\n                <input type=\"text\" className=\"form-control\" value={props.search} onChange={props.handleChange} placeholder=\"search\"/>\n            </form>\n        /* </div> */\n    )\n    \n}\n\nexport default Search","import React from 'react'\nimport './table.css'\n\nfunction Table(props) {\n    // map through the results from the api call and make a table row for each person\n    const employees = props.results.map((person, x) => {\n        return (\n            <tr key={x}>\n                <th scope=\"row\"><img src={person.image} alt=\"person\" /></th>\n                <td>{person.name}</td>\n                <td>{person.phone}</td>\n                <td>{person.email}</td>\n                <td>{person.dob}</td>\n            </tr>\n        )\n    })\n\n    return (\n        <table className=\"table  table-bordered table-hover\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Picture</th>\n                    <th scope=\"col\" onClick={() => props.sortBy('name')}>Name &#x21C5;</th>\n                    <th scope=\"col\">Phone</th>\n                    <th scope=\"col\" onClick={() => props.sortBy('email')}>Email Address &#x21C5;</th>\n                    <th scope=\"col\" onClick={() => props.sortBy('age')}>Birthday &#x21C5;</th>\n                </tr>\n            </thead>\n            <tbody>\n                {/* table body renders the mapped api results of relevant info */}\n                {employees}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport Search from '../Search/search';\nimport Table from '../Table/table';\nimport Header from \"../Header/header\";\nimport axios from 'axios';\n\n// initialized an array to store api call results that are needed to render \\\\\nlet resArray;\n\nexport default class State extends Component {\n    // initializes state for later use\n    state = {\n        search: \"\",\n        results: [],\n        acsend: false\n    }\n\n    // immediately calls api on launch of app \\\\\n    componentDidMount() {\n        axios.get('https://randomuser.me/api/?results=150')\n            .then(res => {\n                // takes api response and maps to the resArray from above \\\\\n                resArray = res.data.results.map(person => {\n                    var dateString = person.dob.date;\n                    var d = new Date(dateString);\n                    var correctDate = (d.getMonth() + 1) + '.' + d.getDate() + '.' + d.getFullYear();\n                    // pulls only the relevant items from api \\\\ \n                    return {\n                        image: person.picture.large,\n                        name: `${person.name.first} ${person.name.last}`,\n                        phone: person.phone,\n                        email: person.email,\n                        dob: correctDate,\n                        age: person.dob.age\n                    }\n                });\n\n                // sets the results state to the new array \\\\\n                this.setState({ results: resArray })\n            })\n            // if error occurs \\\\\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    // allows for rerendering of employees on change of the search \\\\\n    handleChange = event => {\n        const key = event.target.value;\n        const filter = resArray.filter(entry => Object.values(entry).some(val => typeof val === \"string\" && val.includes(key)));\n\n        this.setState({\n            search: key,\n            results: filter\n        });\n    }\n\n    sortBy = sort => {\n        if (this.state.ascend === true) {\n            const acsendFalse = this.state.results.sort((a, b) => a[sort] < b[sort] ? 1 : -1);\n\n            this.setState({\n                results: acsendFalse,\n                ascend: false\n            });\n        } else {\n            const acsendTrue = this.state.results.sort((a, b) => a[sort] > b[sort] ? 1 : -1);\n\n            this.setState({\n                results: acsendTrue,\n                ascend: true\n            });\n        }\n\n    }\n\n    toTop = () => {\n        document.documentElement.scrollTop = 0;\n    }\n\n    render() {\n        return (\n            <div>\n                <Header toTop={this.toTop}/>\n                <Search search={this.state.search} handleChange={this.handleChange} />\n                <Table results={this.state.results} sortBy={this.sortBy} />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./header.css\"\n\n// jumbotron component with back to top function\nconst Header = (props) => {\n    return (\n        <div className=\"header sticky-top bg-dark text-white\">\n            <h1>Employee Directory</h1>\n            <button onClick={() => props.toTop()} type=\"button\" class=\" butt btn btn-outline-light\">Back to Top</button>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Main from \"./components/Main/main\";\n\nfunction App() {\n  return (\n    <div className = \"container\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}